plugins {
    id "org.asciidoctor.convert" version "1.5.3"
    id 'com.github.jruby-gradle.base' version '1.5.0'
    id 'org.kordamp.gradle.livereload' version '0.2.1'
}

group = "org.neo4j.tips"

dependencies {
    asciidoctor 'org.asciidoctor:asciidoctorj-pdf:1.5.0-alpha.16'
    gems 'rubygems:asciidoctor-diagram:1.5.9'
}

import org.asciidoctor.gradle.AsciidoctorTask

tasks.withType(AsciidoctorTask) { docTask ->
    dependsOn jrubyPrepare
    requires = ['asciidoctor-diagram']
    gemPath = jrubyPrepare.outputDir

    attributes \
          'examples': "$projectDir/examples",
          'allow-uri-read': true

    sourceDir = new File("src/main/asciidoc")
    outputDir = project.buildDir

    resources {
        from(sourceDir) {
            include '**/*.png'
        }
    }
}

task generateHTML (
        type: AsciidoctorTask,
        description: 'use html5 as asciidoc backend'
) {
    backends = ['html5']
}


// See: https://github.com/junit-team/junit5/commit/cb8d49578740159871a4358707c01050d194e220
ext.imagesCatalogDir = new File(buildDir, 'asciidoc/images')
task copyStaticImagesToCatalogDir(type: Copy) {
	from 'src/main/asciidoc/images'
	into imagesCatalogDir
}

task generatePDF (
        type: AsciidoctorTask,
        description: 'use pdf as asciidoc backend'
) {
    dependsOn copyStaticImagesToCatalogDir
    backends = ['pdf']
    attributes \
        'imagesoutdir': imagesCatalogDir,
        'imagesdir': imagesCatalogDir
}

liveReload {
    docRoot asciidoctor.outputDir.canonicalPath + '/html5'
}

defaultTasks "generateHTML"
